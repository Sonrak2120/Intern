/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 demo.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/demo.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[10, 0, -20]} rotation={[0, -Math.PI / 2, 0]} scale={0.25}>
        <mesh geometry={nodes.Cube005.geometry} material={materials['Material.001']} position={[0.57, 10.32, -0.12]} rotation={[0, 0, -Math.PI / 2]} scale={[3, 0.05, 3]} />
        <mesh geometry={nodes.Cylinder.geometry} material={materials['Material.002']} position={[0, 5.25, 0]} scale={[0.5, 5, 0.5]} />
      </group>
      <group position={[10, 0, 0]} rotation={[0, Math.PI / 2, 0]} scale={0.25}>
        <mesh geometry={nodes.Cylinder001.geometry} material={materials['Material.002']} position={[0, 5.25, 0]} scale={[0.25, 5, 0.25]} />
        <mesh geometry={nodes.Cube006.geometry} material={materials['Material.003']} position={[4.81, 11.25, 0]} scale={[6, 1, 1]} />
        <mesh geometry={nodes.Sphere.geometry} material={materials['Material.002']} position={[0, 10.61, 0]} scale={0.5} />
      </group>
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[10.7, 2.6, -25.45]} rotation={[Math.PI / 2, 0, 0]} scale={[15, 0.03, 2.5]} />
      <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[10.72, 0.05, -10.46]} scale={[15, 0.03, 15]} />
      <mesh geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} position={[-4.25, 2.53, -10.44]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[15, 0.03, 2.5]} />
      <mesh geometry={nodes.Cube003.geometry} material={nodes.Cube003.material} position={[10.72, 2.53, 4.5]} rotation={[Math.PI / 2, 0, 0]} scale={[15, 0.03, 2.5]} />
      <mesh geometry={nodes.Cube004.geometry} material={nodes.Cube004.material} position={[25.7, 2.53, -10.44]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[15, 0.03, 2.5]} />
    </group>
  )
}

useGLTF.preload('/demo.glb')
